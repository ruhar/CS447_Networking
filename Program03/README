 _____  _____    ___   ___  ______
/  __ \/  ___|  /   | /   ||___  /
| /  \/\ `--.  / /| |/ /| |   / / 
| |     `--. \/ /_| / /_| |  / /  
| \__/\/\__/ /\___  \___  |./ /   
 \____/\____/     |_/   |_/\_/    
                                  
____________       _____  _____ 
| ___ \ ___ \     |  _  ||____ |
| |_/ / |_/ /_____| |/' |    / /
|  __/|    /______|  /| |    \ \
| |   | |\ \      \ |_/ /.___/ /
\_|   \_| \_|      \___/ \____/ 
                                
                    
Author:
Ben Hubler
bhubler@siue.edu
December 3, 2018
              
Summary:
Program 03 implements a make shift version of the RTSP out of band protocol to aid Captain Haddock monitor oxygen, temperature, and pressure in his quest to find the last unicorn. Unfortunately, Captain Haddock has fallen victim to man-in-the-middle attacks and unauthorized use of his sensor array. The primary objectives for program 3 is to create an application that utilizes multithreading to facilitate multiple client pairs in a secure manner and allow only authenticated users. Attempt to make the program stable utilizing error control with try/catch blocks. Exit client pairs cleanly with proper thread management. Provide an an easy to use interface, all while learning more about creating protocols using the sockets library and the OpenSSL library.

When successfully complied, there are three executables, server.app, controller.app, and receiver.app. The server and receiver should be running before the controller. The server is capable of accepting multiple clients that act independently of one another to receive the same sensor data.

Extra Credit:
User friendliness has been improved by offering the use of quick commands and an advanced help information display on initial startup of the controller.

Installation:
From the directory with "makefile"
To install
make
To clean
make clean

Run:
From the directory with *.app files in the following order.
Server
./server.app <server-port> <oxygen.bin> <temperature.bin> <pressure.bin>

Receiver
./receiver.app <receiver-port>

Controller
./controller.app <hostname/server-ip> <server-port> <receiver-port>

Example
*assuming sensor files are in same directory as executables
./server.app 8100 ./oxygen.bin ./temperature.bin ./pressure.bin
./receiver.app 4800
./controller.app home.cs.siue.edu 8100 4800

Usage:
All commands are issued from the controller application.
The following quick commands are recommended, however all command can be fully typed.
setupauth #must be ran first before any data can be sent to receiver
play      
pause
teardown



Files Included:
/README
/makefile
/PR03-WireShark.pcap
/PR03-SSL-WireShark.pcap
/Program03-Report.pdf
/bhubler_cs447.pem
/src/Common/common.cpp
/src/Common/common.hpp
/src/Common/rtspheaders.cpp
/src/Common/rtspheaders.hpp
/src/Common/tcpargs.cpp
/src/Common/tcpargs.hpp
/src/Controller/controller.cpp
/src/Controller/controller.hpp
/src/Controller/main.cpp
/src/Receiver/receiver.cpp
/src/Receiver/receiver.hpp
/src/Receiver/main.cpp
/src/Server/server.cpp
/src/Server/server.hpp
/src/Server/main.cpp
/src/Server/SensorControl.cpp
/src/Server/SensorControl.hpp
/src/Server/SensorControlClient.cpp
/src/Server/SensorControlClient.hpp



